{"spans": [{"name": "Completions", "context": {"span_id": "0xc6b43c21abeb6cda", "trace_id": "0x342ec01fe4451bc3990980ffdf0269f7"}, "parent_id": null, "start_time": 1738855372357132272, "end_time": 1738855374414771094, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"e7d9802529bf403299dd05d062dbae0e\"", "mlflow.spanType": "\"CHAT_MODEL\"", "mlflow.spanInputs": "{\"messages\": [{\"role\": \"system\", \"content\": \"Answer the following question in two sentences\"}, {\"role\": \"user\", \"content\": \"How does useEffect() work?\"}], \"model\": \"gpt-4o-mini\"}", "model": "\"gpt-4o-mini\"", "mlflow.chat.messages": "[{\"role\": \"system\", \"content\": \"Answer the following question in two sentences\"}, {\"role\": \"user\", \"content\": \"How does useEffect() work?\"}, {\"content\": \"The `useEffect()` hook in React allows you to perform side effects in functional components, such as data fetching, subscriptions, or manual DOM manipulations. It takes a function that can return a cleanup function, and you can optionally specify dependencies that determine when the effect should re-run, with an empty array meaning it runs only once after the initial render.\", \"refusal\": null, \"role\": \"assistant\"}]", "mlflow.spanOutputs": "{\"id\": \"chatcmpl-Axy0KqUau5xeZdXt19GyDxmdkMZ4I\", \"choices\": [{\"finish_reason\": \"stop\", \"index\": 0, \"logprobs\": null, \"message\": {\"content\": \"The `useEffect()` hook in React allows you to perform side effects in functional components, such as data fetching, subscriptions, or manual DOM manipulations. It takes a function that can return a cleanup function, and you can optionally specify dependencies that determine when the effect should re-run, with an empty array meaning it runs only once after the initial render.\", \"refusal\": null, \"role\": \"assistant\", \"audio\": null, \"function_call\": null, \"tool_calls\": null}}], \"created\": 1738855372, \"model\": \"gpt-4o-mini-2024-07-18\", \"object\": \"chat.completion\", \"service_tier\": \"default\", \"system_fingerprint\": \"fp_bd83329f63\", \"usage\": {\"completion_tokens\": 72, \"prompt_tokens\": 25, \"total_tokens\": 97, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}}"}, "events": []}], "request": "{\"messages\": [{\"role\": \"system\", \"content\": \"Answer the following question in two sentences\"}, {\"role\": \"user\", \"content\": \"How does useEffect() work?\"}], \"model\": \"gpt-4o-mini\"}", "response": "{\"id\": \"chatcmpl-Axy0KqUau5xeZdXt19GyDxmdkMZ4I\", \"choices\": [{\"finish_reason\": \"stop\", \"index\": 0, \"logprobs\": null, \"message\": {\"content\": \"The `useEffect()` hook in React allows you to perform side effects in functional components, such as data fetching, subscriptions, or manual DOM manipulations. It takes a function that can return a cleanup function, and you can optionally specify dependencies that determine when the effect should re-run, with an empty array meaning it runs only once after the initial render.\", \"refusal\": null, \"role\": \"assistant\", \"audio\": null, \"function_call\": null, \"tool_calls\": null}}], \"created\": 1738855372, \"model\": \"gpt-4o-mini-2024-07-18\", \"object\": \"chat.completion\", \"service_tier\": \"default\", \"system_fingerprint\": \"fp_bd83329f63\", \"usage\": {\"completion_tokens\": 72, \"prompt_tokens\": 25, \"total_tokens\": 97, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}}"}