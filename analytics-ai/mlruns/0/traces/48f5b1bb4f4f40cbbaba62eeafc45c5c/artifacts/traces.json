{"spans": [{"name": "Completions", "context": {"span_id": "0xa91adc17b7a0f8ca", "trace_id": "0x656811dbc15bfeed7b7fcd8201209348"}, "parent_id": null, "start_time": 1738855461268768426, "end_time": 1738855462672857614, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"48f5b1bb4f4f40cbbaba62eeafc45c5c\"", "mlflow.spanType": "\"CHAT_MODEL\"", "mlflow.spanInputs": "{\"messages\": [{\"role\": \"system\", \"content\": \"Answer the following question in two sentences\"}, {\"role\": \"user\", \"content\": \"How does useEffect() work?\"}], \"model\": \"gpt-4o-mini\"}", "model": "\"gpt-4o-mini\"", "mlflow.chat.messages": "[{\"role\": \"system\", \"content\": \"Answer the following question in two sentences\"}, {\"role\": \"user\", \"content\": \"How does useEffect() work?\"}, {\"content\": \"The `useEffect()` hook in React allows developers to perform side effects in function components, such as data fetching, subscriptions, or manually changing the DOM. It takes a function as its first argument, which runs after the component renders, and an optional second argument—an array of dependencies that determines when the effect should re-run based on changes to those dependencies.\", \"refusal\": null, \"role\": \"assistant\"}]", "mlflow.spanOutputs": "{\"id\": \"chatcmpl-Axy1lLitnkGkYCE69GWo3eYQZZlvy\", \"choices\": [{\"finish_reason\": \"stop\", \"index\": 0, \"logprobs\": null, \"message\": {\"content\": \"The `useEffect()` hook in React allows developers to perform side effects in function components, such as data fetching, subscriptions, or manually changing the DOM. It takes a function as its first argument, which runs after the component renders, and an optional second argument—an array of dependencies that determines when the effect should re-run based on changes to those dependencies.\", \"refusal\": null, \"role\": \"assistant\", \"audio\": null, \"function_call\": null, \"tool_calls\": null}}], \"created\": 1738855461, \"model\": \"gpt-4o-mini-2024-07-18\", \"object\": \"chat.completion\", \"service_tier\": \"default\", \"system_fingerprint\": \"fp_bd83329f63\", \"usage\": {\"completion_tokens\": 73, \"prompt_tokens\": 25, \"total_tokens\": 98, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}}"}, "events": []}], "request": "{\"messages\": [{\"role\": \"system\", \"content\": \"Answer the following question in two sentences\"}, {\"role\": \"user\", \"content\": \"How does useEffect() work?\"}], \"model\": \"gpt-4o-mini\"}", "response": "{\"id\": \"chatcmpl-Axy1lLitnkGkYCE69GWo3eYQZZlvy\", \"choices\": [{\"finish_reason\": \"stop\", \"index\": 0, \"logprobs\": null, \"message\": {\"content\": \"The `useEffect()` hook in React allows developers to perform side effects in function components, such as data fetching, subscriptions, or manually changing the DOM. It takes a function as its first argument, which runs after the component renders, and an optional second argument—an array of dependencies that determines when the effect should re-run based on changes to those dependencies.\", \"refusal\": null, \"role\": \"assistant\", \"audio\": null, \"function_call\": null, \"tool_calls\": null}}], \"created\": 1738855461, \"model\": \"gpt-4o-mini-2024-07-18\", \"object\": \"chat.completion\", \"service_tier\": \"default\", \"system_fingerprint\": \"fp_bd83329f63\", \"usage\": {\"completion_tokens\": 73, \"prompt_tokens\": 25, \"total_tokens\": 98, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}}"}